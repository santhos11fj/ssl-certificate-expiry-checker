# âœ… Incident Management - Auto GitHub Issue Creation
- name: Create GitHub Issue for High/Error SSL Certificates
  if: always()
  uses: actions/github-script@v7
  env:
    TEST_MODE: ${{ env.TEST_MODE }}
  with:
    github-token: ${{ secrets.GITHUB_TOKEN }}
    script: |
      const fs = require('fs');
      const data = JSON.parse(fs.readFileSync('sslCertificateDetails.json'));
      const endpoints = JSON.parse(fs.readFileSync('endpoints.json'));

      const TEST_MODE = process.env.TEST_MODE === "true";

      // âœ… Get open issues only for production duplicate check
      let existingTitles = [];
      if (!TEST_MODE) {
        const issues = await github.rest.issues.listForRepo({
          owner: context.repo.owner,
          repo: context.repo.repo,
          state: "open"
        });
        existingTitles = issues.data.map(issue => issue.title);
      }

      for (const risk of data.filter(d => ["High","Error"].includes(d.Severity))) {
        const endpoint = endpoints.find(e => e.hostname === risk.hostname);
        const issueTitle = `ðŸš¨ SSL Alert: ${risk.hostname} (${risk.Severity} severity)`;

        if (TEST_MODE) {
          // âœ… Always create a unique issue in Test Mode
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `${issueTitle} [Test Run ${Date.now()}]`,
            body: `
### ðŸ”¥ Test Mode SSL Certificate Alert ðŸš¨

- **Hostname:** ${risk.hostname}  
- **Severity:** ${risk.Severity}  
- **Days Left:** ${risk.DaysToExpire}  
- **Environment:** ${risk.environment}  
- **Owner:** ${endpoint?.owner || 'Not Assigned'}  

*(This issue was auto-generated during **TEST MODE**)*
            `,
            labels: ["SSL Certificate", "TestMode", risk.Severity],
          });
        } else {
          // âœ… Production Mode â†’ Prevent duplicates
          if (!existingTitles.includes(issueTitle)) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: `
### SSL Certificate Alert ðŸš¨

- **Hostname:** ${risk.hostname}  
- **Severity:** ${risk.Severity}  
- **Days Left:** ${risk.DaysToExpire}  
- **Environment:** ${risk.environment}  
- **Owner:** ${endpoint?.owner || 'Not Assigned'}  

Please renew this SSL certificate immediately.

*(This issue was auto-generated by GitHub Actions SSL monitoring.)*
              `,
              labels: ["SSL Certificate", risk.Severity],
            });
          }
        }
      }

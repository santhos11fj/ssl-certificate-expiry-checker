name: SSL Email Test (Outlook)

on:
  workflow_dispatch: # run manually from the Actions tab

jobs:
  test-email:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Show repo files (debug)
        run: |
          pwd
          ls -la

      - name: Verify scripts exist (debug)
        shell: pwsh
        run: |
          $files = @("Send-SMTPAlert.ps1", "Send-ExpiryEmail.ps1")
          foreach ($file in $files) {
            if (Test-Path $file) {
              Write-Host "FOUND: $file"
            } else {
              Write-Error "MISSING: $file"
            }
          }

      - name: Create test JSON with High severity
        shell: pwsh
        run: |
          @(
            @{
              Host="example.com"; Issuer="Let's Encrypt";
              ExpiryDate=[DateTime]::UtcNow.AddDays(5).ToString("yyyy-MM-dd");
              DaysRemaining=5; Severity="High"; Owner="***"
            }
          ) | ConvertTo-Json | Set-Content .\sslCertificateDetails.json
          Write-Host "Created sslCertificateDetails.json"
          Get-Content .\sslCertificateDetails.json

      - name: Send SMTP email (Outlook)
        shell: pwsh
        env:
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_FROM: ${{ secrets.SMTP_FROM }}
          SMTP_TO: ${{ secrets.SMTP_TO }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
        run: |
          ./Send-SMTPAlert.ps1 -smtpServer $env:SMTP_SERVER -smtpPort $env:SMTP_PORT `
            -smtpFrom $env:SMTP_FROM -smtpTo $env:SMTP_TO -smtpUser $env:SMTP_USER `
            -smtpPass $env:SMTP_PASS -subject "SSL Test Alert" -body "This is a test email from GitHub Actions via Outlook SMTP."

      - name: Confirm email sent
        run: echo "âœ… SMTP alert sent"
